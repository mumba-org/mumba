syntax = "proto3";

package tweedy;

// enum EntryContentType {
//   UNDEFINED_TYPE = 0;
//   BINARY = 1;
//   TEXT_ASCII = 2;
//   TEXT_UTF8 = 3;
//   TEXT_UTF16 = 4;
//   TEXT_XML = 5;
//   TEXT_HTML = 6;
//   TEXT_JSON = 7;
// }

// enum EntryContentMode {
//   UNDEFINED_MODE = 0;
//   STATIC = 1;
//   DINAMIC = 2;
// }

// enum EntryOutputType {
//   UNDEFINED_OUTPUT = 0;
//   NORMAL = 1;
//   STREAM = 2;
// }

// message EntryInfo {
//  string name = 1;
//  string title = 2;
//  string input_message = 3;
//  string mime_type = 4;
//  bytes icon_data = 5;
//  EntryContentType content_type = 6;
//  EntryContentMode content_mode = 7;
//  EntryOutputType output_type = 8;
// }

// message EntryContent {
//   int32 offset = 1;
//   int64 size = 2;
//   bytes data = 3;
//   EntryContentType content_type = 4;
// }

// message EntryCatalog {
//   int32 entry_count = 1;
//   repeated EntryInfo entries = 2;
// }

// // The request message containing the user's name.
// message EntryRequest {
//   string path = 1;
// }

// message EntryReply {
//   int32 status_code = 1;
//   int32 content_count = 2;
//   repeated EntryContent content = 3;
// }

message ChatMessage {
  string message = 1;
}

// The tweedy service definition.
service Tweedy {
  rpc Say(ChatMessage) returns (stream ChatMessage);
}
