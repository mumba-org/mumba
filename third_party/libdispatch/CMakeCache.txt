# This is the CMakeCache file.
# For build in directory: /workspace/source/swift/swift-corelibs-libdispatch
# It was generated by CMake: /home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//build shared libraries
BUILD_SHARED_LIBS:BOOL=ON

//Path to a file.
BlocksRuntime_INCLUDE_DIR:PATH=BlocksRuntime_INCLUDE_DIR-NOTFOUND

//Path to a library.
BlocksRuntime_LIBRARIES:FILEPATH=/workspace//build/linux/debian_sid_amd64-sysroot/lib/x86_64-linux-gnu/libBlocksRuntime.a

//Dependencies for target
BlocksRuntime_LIB_DEPENDS:STATIC=

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/workspace//third_party/llvm-build/Release+Asserts/bin/clang++

//LLVM archiver
CMAKE_CXX_COMPILER_AR:FILEPATH=/workspace//third_party/llvm-build/Release+Asserts/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/llvm-ranlib

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/workspace//third_party/llvm-build/Release+Asserts/bin/clang

//LLVM archiver
CMAKE_C_COMPILER_AR:FILEPATH=/workspace//third_party/llvm-build/Release+Asserts/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/llvm-ranlib

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=dispatch

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Define the sanitizer used to build binaries and tests.
DISPATCH_USE_SANITIZER:STRING=

//use non-portable pthread TSD optimizations
ENABLE_APPLE_TSD_OPTIMIZATIONS:BOOL=OFF

//enable libdispatch_init as a constructor
ENABLE_DISPATCH_INIT_CONSTRUCTOR:BOOL=ON

//enable dtrace support
ENABLE_DTRACE:BOOL=OFF

//use libdispatch's own implementation of pthread workqueues
ENABLE_INTERNAL_PTHREAD_WORKQUEUES:BOOL=ON

//enable libdispatch swift overlay
ENABLE_SWIFT:BOOL=OFF

//build libdispatch tests
ENABLE_TESTING:BOOL=ON

//enable usage of thread local storage via _Thread_local
ENABLE_THREAD_LOCAL_STORAGE:BOOL=ON

//Path where the headers will be installed for the blocks runtime
INSTALL_BLOCK_HEADERS_DIR:PATH=include

//Path where the headers will be installed
INSTALL_DISPATCH_HEADERS_DIR:PATH=include/dispatch

//Path where the libraries should be installed
INSTALL_LIBDIR:PATH=lib

//Path where the headers will be installed
INSTALL_OS_HEADERS_DIR:PATH=include/os

//installs private headers in the same location as the public ones
INSTALL_PRIVATE_HEADERS:BOOL=OFF

//Path where the libraries will be installed
INSTALL_TARGET_DIR:PATH=lib

//Path to a file.
LibRT_INCLUDE_DIR:PATH=/workspace//build/linux/debian_sid_amd64-sysroot/usr/include

//Path to a library.
LibRT_LIBRARIES:FILEPATH=/workspace//build/linux/debian_sid_amd64-sysroot/usr/lib/x86_64-linux-gnu/librt.so

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

//Library folder name, defined by swift main buildscript
SWIFT_LIBDIR:PATH=lib

//use the gold linker
USE_GOLD_LINKER:BOOL=OFF

//use the lld linker
USE_LLD_LINKER:BOOL=ON

//Path to Apple's libclosure
WITH_APPLE_LIBCLOSURE_SOURCE:PATH=

//Path to Apple's libplatform
WITH_APPLE_LIBPLATFORM_SOURCE:PATH=

//Path to Apple's ObjC4
WITH_APPLE_OBJC4_SOURCE:PATH=

//Path to Apple's libpthread
WITH_APPLE_PTHREAD_SOURCE:PATH=

//Path to Apple's XNU
WITH_APPLE_XNU_SOURCE:PATH=

//Dependencies for target
bsdtests_LIB_DEPENDS:STATIC=

//Value Computed by CMake
dispatch_BINARY_DIR:STATIC=/workspace/source/swift/swift-corelibs-libdispatch

//Dependencies for the target
dispatch_LIB_DEPENDS:STATIC=general;-lbsd;general;RT::rt;general;BlocksRuntime::BlocksRuntime;

//Value Computed by CMake
dispatch_SOURCE_DIR:STATIC=/workspace/source/swift/swift-corelibs-libdispatch

//Path to a program.
leaks_EXECUTABLE:FILEPATH=leaks_EXECUTABLE-NOTFOUND


########################
# INTERNAL cache entries
########################

BSD_OVERLAY_CFLAGS:INTERNAL=-isystem;/usr/include/bsd;-DLIBBSD_OVERLAY
BSD_OVERLAY_CFLAGS_I:INTERNAL=
BSD_OVERLAY_CFLAGS_OTHER:INTERNAL=-isystem;/usr/include/bsd;-DLIBBSD_OVERLAY
BSD_OVERLAY_FOUND:INTERNAL=1
BSD_OVERLAY_INCLUDEDIR:INTERNAL=/usr/include
BSD_OVERLAY_INCLUDE_DIRS:INTERNAL=
BSD_OVERLAY_LDFLAGS:INTERNAL=-lbsd
BSD_OVERLAY_LDFLAGS_OTHER:INTERNAL=
BSD_OVERLAY_LIBDIR:INTERNAL=/usr/lib/x86_64-linux-gnu
BSD_OVERLAY_LIBRARIES:INTERNAL=bsd
BSD_OVERLAY_LIBRARY_DIRS:INTERNAL=
BSD_OVERLAY_LIBS:INTERNAL=
BSD_OVERLAY_LIBS_L:INTERNAL=
BSD_OVERLAY_LIBS_OTHER:INTERNAL=
BSD_OVERLAY_LIBS_PATHS:INTERNAL=
BSD_OVERLAY_PREFIX:INTERNAL=/usr
BSD_OVERLAY_STATIC_CFLAGS:INTERNAL=-isystem;/usr/include/bsd;-DLIBBSD_OVERLAY
BSD_OVERLAY_STATIC_CFLAGS_I:INTERNAL=
BSD_OVERLAY_STATIC_CFLAGS_OTHER:INTERNAL=-isystem;/usr/include/bsd;-DLIBBSD_OVERLAY
BSD_OVERLAY_STATIC_INCLUDE_DIRS:INTERNAL=
BSD_OVERLAY_STATIC_LDFLAGS:INTERNAL=-lbsd
BSD_OVERLAY_STATIC_LDFLAGS_OTHER:INTERNAL=
BSD_OVERLAY_STATIC_LIBDIR:INTERNAL=
BSD_OVERLAY_STATIC_LIBRARIES:INTERNAL=bsd
BSD_OVERLAY_STATIC_LIBRARY_DIRS:INTERNAL=
BSD_OVERLAY_STATIC_LIBS:INTERNAL=
BSD_OVERLAY_STATIC_LIBS_L:INTERNAL=
BSD_OVERLAY_STATIC_LIBS_OTHER:INTERNAL=
BSD_OVERLAY_STATIC_LIBS_PATHS:INTERNAL=
BSD_OVERLAY_VERSION:INTERNAL=0.8.3
BSD_OVERLAY_libbsd-overlay_INCLUDEDIR:INTERNAL=
BSD_OVERLAY_libbsd-overlay_LIBDIR:INTERNAL=
BSD_OVERLAY_libbsd-overlay_PREFIX:INTERNAL=
BSD_OVERLAY_libbsd-overlay_VERSION:INTERNAL=
//ADVANCED property for variable: BlocksRuntime_INCLUDE_DIR
BlocksRuntime_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BlocksRuntime_LIBRARIES
BlocksRuntime_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/workspace/source/swift/swift-corelibs-libdispatch
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=10
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/workspace/source/swift/swift-corelibs-libdispatch
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=7
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/home/fabiok/Downloads/cmake-3.10.0-Linux-x86_64/share/cmake-3.10
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding LibRT
FIND_PACKAGE_MESSAGE_DETAILS_LibRT:INTERNAL=[/workspace//build/linux/debian_sid_amd64-sysroot/usr/lib/x86_64-linux-gnu/librt.so][/workspace//build/linux/debian_sid_amd64-sysroot/usr/include][v()]
//Details about finding PkgConfig
FIND_PACKAGE_MESSAGE_DETAILS_PkgConfig:INTERNAL=[/usr/bin/pkg-config][v0.29.1()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have function arc4random
HAVE_ARC4RANDOM:INTERNAL=
//Have symbol CLOCK_MONOTONIC
HAVE_DECL_CLOCK_MONOTONIC:INTERNAL=1
//Have symbol CLOCK_MONOTONIC_COARSE
HAVE_DECL_CLOCK_MONOTONIC_COARSE:INTERNAL=1
//Have symbol CLOCK_REALTIME
HAVE_DECL_CLOCK_REALTIME:INTERNAL=1
//Have symbol CLOCK_UPTIME
HAVE_DECL_CLOCK_UPTIME:INTERNAL=
//Have symbol CLOCK_UPTIME_FAST
HAVE_DECL_CLOCK_UPTIME_FAST:INTERNAL=
//Have symbol FD_COPY
HAVE_DECL_FD_COPY:INTERNAL=
//Have symbol NOTE_LOWAT
HAVE_DECL_NOTE_LOWAT:INTERNAL=
//Have symbol NOTE_NONE
HAVE_DECL_NOTE_NONE:INTERNAL=
//Have symbol NOTE_REAP
HAVE_DECL_NOTE_REAP:INTERNAL=
//Have symbol NOTE_REVOKE
HAVE_DECL_NOTE_REVOKE:INTERNAL=
//Have symbol NOTE_SIGNAL
HAVE_DECL_NOTE_SIGNAL:INTERNAL=
//Have symbol POSIX_SPAWN_START_SUSPENDED
HAVE_DECL_POSIX_SPAWN_START_SUSPENDED:INTERNAL=
//Have symbol program_invocation_name
HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME:INTERNAL=1
//Have symbol SIGEMT
HAVE_DECL_SIGEMT:INTERNAL=
//Have symbol VQ_DESIRED_DISK
HAVE_DECL_VQ_DESIRED_DISK:INTERNAL=
//Have symbol VQ_NEARLOWDISK
HAVE_DECL_VQ_NEARLOWDISK:INTERNAL=
//Have symbol VQ_QUOTA
HAVE_DECL_VQ_QUOTA:INTERNAL=
//Have symbol VQ_UPDATE
HAVE_DECL_VQ_UPDATE:INTERNAL=
//Have symbol VQ_VERYLOWDISK
HAVE_DECL_VQ_VERYLOWDISK:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have function getprogname
HAVE_GETPROGNAME:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have includes libkern/OSAtomic.h
HAVE_LIBKERN_OSATOMIC_H:INTERNAL=
//Have includes libkern/OSCrossEndian.h
HAVE_LIBKERN_OSCROSSENDIAN_H:INTERNAL=
//Have includes libproc_internal.h
HAVE_LIBPROC_INTERNAL_H:INTERNAL=
//Have includes mach/mach.h
HAVE_MACH:INTERNAL=
//Have function mach_absolute_time
HAVE_MACH_ABSOLUTE_TIME:INTERNAL=
//Have function mach_approximate_time
HAVE_MACH_APPROXIMATE_TIME:INTERNAL=
//Have function mach_port_construct
HAVE_MACH_PORT_CONSTRUCT:INTERNAL=
//Have function malloc_create_zone
HAVE_MALLOC_CREATE_ZONE:INTERNAL=
//Have includes malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have includes objc/objc-internal.h
HAVE_OBJC:INTERNAL=
//Have symbol __printflike
HAVE_PRINTFLIKE:INTERNAL=
//Have function pthread_key_init_np
HAVE_PTHREAD_KEY_INIT_NP:INTERNAL=
//Have includes pthread_machdep.h
HAVE_PTHREAD_MACHDEP_H:INTERNAL=
//Have function pthread_main_np
HAVE_PTHREAD_MAIN_NP:INTERNAL=
//Have includes pthread_np.h
HAVE_PTHREAD_NP_H:INTERNAL=
//Have includes pthread/qos.h
HAVE_PTHREAD_QOS_H:INTERNAL=
//Have includes pthread_workqueue.h
HAVE_PTHREAD_WORKQUEUE_H:INTERNAL=
//Have includes pthread/workqueue_private.h
HAVE_PTHREAD_WORKQUEUE_PRIVATE_H:INTERNAL=
//Have function pthread_workqueue_setdispatch_np
HAVE_PTHREAD_WORKQUEUE_SETDISPATCH_NP:INTERNAL=
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have include stdlib.h
HAVE_STDLIB_H:INTERNAL=1
//Have include strings.h
HAVE_STRINGS_H:INTERNAL=1
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have function strlcpy
HAVE_STRLCPY:INTERNAL=1
//Have function sysconf
HAVE_SYSCONF:INTERNAL=1
//Have includes sys/guarded.h
HAVE_SYS_GUARDED_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have includes TargetConditionals.h
HAVE_TARGETCONDITIONALS_H:INTERNAL=
//Have function _pthread_workqueue_init
HAVE__PTHREAD_WORKQUEUE_INIT:INTERNAL=
//ADVANCED property for variable: LibRT_INCLUDE_DIR
LibRT_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LibRT_LIBRARIES
LibRT_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
THREADS_HAVE_PTHREAD_ARG:INTERNAL=TRUE
//Have library pthread
USE_POSIX_SEM:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/usr/local
//Have symbol __GNU_LIBRARY__
_GNU_SOURCE:INTERNAL=1
//Test __BUILTIN_TRAP
__BUILTIN_TRAP:INTERNAL=1
__pkg_config_arguments_BSD_OVERLAY:INTERNAL=libbsd-overlay
__pkg_config_checked_BSD_OVERLAY:INTERNAL=1
prefix_result:INTERNAL=/usr/lib/x86_64-linux-gnu

