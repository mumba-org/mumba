//
// Copyright 2019 ZetaSQL Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package zetasql_test;

import "google/protobuf/any.proto";
import "google/protobuf/api.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/source_context.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "zetasql/public/proto/type_annotation.proto";
import "zetasql/public/proto/wire_format_annotation.proto";
import "zetasql/testdata/test_schema.proto";

option java_package = "com.google.zetasqltest";
option java_outer_classname = "TestProto3Proto";

enum TestProto3Enum {
  ENUM0 = 0;
  ENUM1 = 1;
  ENUM2 = 2;
}

// Next_id: 64
message Proto3KitchenSink {
  int32 int32_val = 1;
  uint32 uint32_val = 2;
  int64 int64_val = 3;
  uint64 uint64_val = 4;
  string string_val = 5;
  float float_val = 6;
  double double_val = 7;
  bytes bytes_val = 8;
  bool bool_val = 9;
  fixed32 fixed32_val = 10;
  fixed64 fixed64_val = 11;
  sfixed32 sfixed32_val = 12;
  sfixed64 sfixed64_val = 13;
  sint32 sint32_val = 14;
  sint64 sint64_val = 15;

  // Repeated, all types.
  repeated int32 repeated_int32_val = 16;
  repeated uint32 repeated_uint32_val = 17;
  repeated int64 repeated_int64_val = 18;
  repeated uint64 repeated_uint64_val = 19;
  repeated string repeated_string_val = 20;
  repeated float repeated_float_val = 21;
  repeated double repeated_double_val = 22;
  repeated bytes repeated_bytes_val = 23;
  repeated bool repeated_bool_val = 24;
  repeated fixed32 repeated_fixed32_val = 25;
  repeated fixed64 repeated_fixed64_val = 26;
  repeated sfixed32 repeated_sfixed32_val = 27;
  repeated sfixed64 repeated_sfixed64_val = 28;
  repeated sint32 repeated_sint32_val = 29;
  repeated sint64 repeated_sint64_val = 30;

  message Nested {
    int64 nested_int64 = 1;
    repeated int64 repeated_nested_int64 = 2;
  }
  Nested nested_value = 31;
  repeated Nested repeated_nested_value = 32;

  int32 date = 33 [(zetasql.format) = DATE];
  int32 date_default = 34 [(zetasql.format) = DATE];
  int32 date_decimal = 35 [(zetasql.type) = DATE_DECIMAL];
  int32 date_decimal_legacy = 36
      [(zetasql.type) = DATE, (zetasql.encoding) = DATE_PACKED32];
  int32 date_decimal_default = 37 [(zetasql.type) = DATE_DECIMAL];

  int64 date64 = 38 [(zetasql.type) = DATE];
  int64 date64_decimal = 39 [
    (zetasql.format) = DATE_DECIMAL,
    (zetasql.type) = TIMESTAMP_MILLIS /* this is ignored */
  ];
  int64 date64_decimal_legacy = 40
      [(zetasql.encoding) = DATE_PACKED32, (zetasql.format) = DATE];

  int64 timestamp_seconds = 41 [(zetasql.type) = TIMESTAMP_SECONDS];
  int64 timestamp_millis = 42 [(zetasql.type) = TIMESTAMP_MILLIS];
  int64 timestamp_micros = 43 [(zetasql.type) = TIMESTAMP_MICROS];
  int64 timestamp_seconds_format = 44 [(zetasql.format) = TIMESTAMP_SECONDS];
  int64 timestamp_millis_format = 45 [(zetasql.format) = TIMESTAMP_MILLIS];
  int64 timestamp_micros_format = 46 [(zetasql.format) = TIMESTAMP_MICROS];
  uint64 timestamp_uint64 = 47 [(zetasql.format) = TIMESTAMP_MICROS];
  uint64 timestamp_uint64_default = 48 [(zetasql.format) = TIMESTAMP_MICROS];

  string nullable_string = 49 [(zetasql.use_defaults) = false];

  TestProto3Enum test_enum = 50;

  map<string, int32> test_map = 51;
  map<string, string> invalid_test_map = 63 [(zetasql.format) = DATE];

  Proto3AnnotatedStruct test_struct = 52;

  // Proto2 message
  EmptyMessage empty_message = 53;

  // Proto3 Well Know Types (WKT)
  google.protobuf.Any any_wkt = 54;
  google.protobuf.Timestamp timestamp_wkt = 55;
  google.protobuf.Duration duration_wkt = 56;
  google.protobuf.Empty empty_wkt = 57;
  google.protobuf.FieldMask field_mask_wkt = 58;
  google.protobuf.SourceContext source_context_wkt = 59;
  google.protobuf.Struct struct_wkt = 60;
  google.protobuf.Int32Value wrapped_int32_wkt = 61;
  google.protobuf.Api api_wkt = 62;
}

message SimpleProto3Message {
  int32 int32_val = 1;
}

message Proto3AnnotatedStruct {
  option (zetasql.is_struct) = true;
  option (zetasql.use_field_defaults) = false;

  string f1 = 1 [(zetasql.struct_field_name) = "key"];
  int32 f2 = 2 [(zetasql.struct_field_name) = "key"];
  int32 f3 = 3 [(zetasql.format) = DATE, (zetasql.struct_field_name) = ""];
  bytes f4 = 4
      [(zetasql.struct_field_name) = "", (zetasql.use_defaults) = true];
  repeated int64 f5 = 5 [(zetasql.struct_field_name) = "value"];
}
