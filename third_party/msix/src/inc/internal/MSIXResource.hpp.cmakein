//
//  Copyright (C) 2019 Microsoft.  All rights reserved.
//  See LICENSE file in the project root for full license information.
//
//  MSIXResource.hpp is generated by CMake. Do not edit.
//
#include "AppxPackaging.hpp"
#include "ComHelper.hpp"
#include "AppxFactory.hpp"
#include <vector>

namespace MSIX {

    namespace Resource {

        enum Type
        {
            Certificates,
            ContentType,
            BlockMap,
            AppxManifest,
            AppxBundleManifest
        };

        const size_t resourceLength = ${RESOURCE_LENGTH};
        extern const std::uint8_t resourceByte[resourceLength];
    }

    inline std::vector<std::pair<std::string, ComPtr<IStream>>> GetResources(IMsixFactory* factory, Resource::Type type)
    {
        std::vector<std::pair<std::string, ComPtr<IStream>>> result;
        switch(type)
        {
            case Resource::Type::Certificates:
                ${CERTS_HPP}
                break;
            case Resource::Type::ContentType:
                ${CONTENTTYPE_HPP}
                break;
            case Resource::Type::BlockMap:
                ${BLOCKMAP_HPP}
                break;
            case Resource::Type::AppxManifest:
                ${APPXTYPES_HPP}
                ${APPXMANIFEST_HPP}
                break;
            case Resource::Type::AppxBundleManifest:
                ${APPXTYPES_HPP}
                ${APPXBUNDLEMANIFEST_HPP}
                break;
        }
        return result;
    }

    ${NAMESPACE_MANAGER_HPP}
}