import("//build/config/compiler/compiler.gni")
import("//build/config/features.gni")
import("//build_overrides/build.gni")

#component("gpr") {
static_library("gpr") {  

  sources = [
    "support/alloc.h",
    "support/atm.h",
    "support/atm_gcc_atomic.h",
    "support/atm_gcc_sync.h",
    "support/avl.h",
    "support/cmdline.h",
    "support/cpu.h",
    "support/host_port.h",
    "support/log.h",
    "support/port_platform.h",
    "support/string_util.h",
    "support/subprocess.h",
    "support/sync.h",
    "support/sync_custom.h",
    "support/sync_generic.h",
    "support/sync_posix.h",
    "support/thd.h",
    "support/thd_internal.h",
    "support/time.h",
    "support/tls.h",
    "support/tls_gcc.h",
    "support/tls_msvc.h",
    "support/tls_pthread.h",
    "support/useful.h",
    "impl/codegen/atm.h",
    "impl/codegen/atm_gcc_atomic.h",
    "impl/codegen/atm_gcc_sync.h",
    "impl/codegen/fork.h",
    "impl/codegen/gpr_slice.h",
    "impl/codegen/gpr_types.h",
    "impl/codegen/port_platform.h",
    "impl/codegen/sync.h",
    "impl/codegen/sync_custom.h",
    "impl/codegen/sync_generic.h",
    "impl/codegen/sync_posix.h",
    "profiling/basic_timers.cc",
    "profiling/stap_timers.cc",
    "support/alloc.cc",
    "support/arena.cc",
    "support/atm.cc",
    "support/avl.cc",
    "support/cmdline.cc",
    #"support/cpu_iphone.cc",
    "support/fork.cc",
    "support/host_port.cc",
    "support/log.cc",
    #"support/log_android.cc",
    "support/mpscq.cc",
    "support/murmur_hash.cc",
    "support/string.cc",
    "support/sync.cc",
    "support/thd.cc",
    "support/time.cc",
    "support/time_precise.cc",
    "support/tls_pthread.cc",
    #"support/tmpfile_msys.cc",
    "support/wrap_memcpy.cc",
  ]

  if (current_os == "win") {
    sources += [
     "impl/codegen/sync_windows.h",
     "impl/codegen/atm_windows.h",
     "support/atm_windows.h",
     "support/log_windows.h",
     "support/sync_windows.h",
     "support/thd_windows.cc", 
     "support/cpu_windows.cc",
     "support/subprocess_windows.cc",
     "support/sync_windows.cc",
     "support/tmpfile_windows.cc",
     "support/string_windows.cc",
     "support/string_util_windows.cc",
     "support/log_windows.cc",
     "support/env_windows.cc",
     "support/time_windows.cc",
    ]
  }
  if (is_posix) {
    sources += [
      "support/thd_posix.cc",
      "support/string_posix.cc",
      "support/sync_posix.cc",
      "support/tmpfile_posix.cc",
      "support/log_posix.cc",
      "support/cpu_posix.cc",
      "support/env_posix.cc",
      "support/subprocess_posix.cc",
      "support/time_posix.cc",
    ]
  }
  if (current_os == "linux") {
    sources += [
      "support/log_linux.cc",
      "support/env_linux.cc",
      "support/cpu_linux.cc",
    ]
  }

  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    #"//third_party/abseil-cpp:absl_default_cflags_cc",
  ]
}

component("grpc") {
  configs -= [ "//build/config/clang:find_bad_constructs" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  
  cflags = []
  cflags_cc = []
  defines = []

  include_dirs = [
    "//lib/rpc",
    "//lib/rpc/third_party/c-ares"
  ]

  configs += [
    "//build/config/compiler:no_chromium_code",
  ]
  sources = [
    "surface/init.cc",
    "backoff/backoff.cc",
    "channel/channel_args.cc",
    "channel/channel_stack.cc",
    "channel/channel_stack_builder.cc",
    "channel/connected_channel.cc",
    "channel/handshaker.cc",
    "channel/handshaker_factory.cc",
    "channel/handshaker_registry.cc",
    "compression/compression.cc",
    "compression/message_compress.cc",
    "compression/stream_compression.cc",
    "compression/stream_compression_gzip.cc",
    "compression/stream_compression_identity.cc",
    "debug/stats.cc",
    "debug/stats_data.cc",
    "http/format_request.cc",
    "http/httpcli.cc",
    "http/parser.cc",
    "iomgr/call_combiner.cc",
    "iomgr/combiner.cc",
    "iomgr/endpoint.cc",
    "iomgr/endpoint_pair_uv.cc",
    "iomgr/error.cc",
    "iomgr/exec_ctx.cc",
    "iomgr/executor.cc",
    "iomgr/gethostname_fallback.cc",
    "iomgr/gethostname_host_name_max.cc",
    "iomgr/gethostname_sysconf.cc",
    "iomgr/iomgr.cc",
    "iomgr/iomgr_uv.cc",
    "iomgr/is_epollexclusive_available.cc",
    "iomgr/load_file.cc",
    "iomgr/lockfree_event.cc",
    "iomgr/network_status_tracker.cc",
    "iomgr/polling_entity.cc",
    "iomgr/pollset_set_uv.cc",
    "iomgr/pollset_uv.cc",
    "iomgr/resolve_address_posix.cc",
    "iomgr/resolve_address_uv.cc",
    "iomgr/resource_quota.cc",
    "iomgr/sockaddr_utils.cc",
    "iomgr/socket_factory_posix.cc",
    "iomgr/socket_mutator.cc",
    "iomgr/socket_utils_common_posix.cc",
    "iomgr/socket_utils_linux.cc",
    "iomgr/socket_utils_posix.cc",
    "iomgr/socket_utils_uv.cc",
    "iomgr/tcp_client_posix.cc",
    "iomgr/tcp_client_uv.cc",
    "iomgr/tcp_posix.cc",
    "iomgr/tcp_server_posix.cc",
    "iomgr/tcp_server_utils_posix_common.cc",
    "iomgr/tcp_server_utils_posix_ifaddrs.cc",
    "iomgr/tcp_server_utils_posix_noifaddrs.cc",
    "iomgr/tcp_server_uv.cc",
    "iomgr/tcp_uv.cc",
    "iomgr/time_averaged_stats.cc",
    "iomgr/timer_generic.cc",
    "iomgr/timer_heap.cc",
    "iomgr/timer_manager.cc",
    "iomgr/timer_uv.cc",
    "iomgr/udp_server.cc",
    "iomgr/unix_sockets_posix.cc",
    "iomgr/unix_sockets_posix_noop.cc",
    "iomgr/wakeup_fd_cv.cc",
    "iomgr/wakeup_fd_eventfd.cc",
    "iomgr/wakeup_fd_nospecial.cc",
    "iomgr/wakeup_fd_pipe.cc",
    "iomgr/wakeup_fd_posix.cc",
    "json/json.cc",
    "json/json_reader.cc",
    "json/json_string.cc",
    "json/json_writer.cc",
    "slice/b64.cc",
    "slice/percent_encoding.cc",
    "slice/slice.cc",
    "slice/slice_buffer.cc",
    "slice/slice_hash_table.cc",
    "slice/slice_intern.cc",
    "slice/slice_string_helpers.cc",
    "surface/alarm.cc",
    "surface/api_trace.cc",
    "surface/byte_buffer.cc",
    "surface/byte_buffer_reader.cc",
    "surface/call.cc",
    "surface/call_details.cc",
    "surface/call_log_batch.cc",
    "surface/channel.cc",
    "surface/channel_init.cc",
    "surface/channel_ping.cc",
    "surface/channel_stack_type.cc",
    "surface/completion_queue.cc",
    "surface/completion_queue_factory.cc",
    "surface/event_string.cc",
    "surface/lame_client.cc",
    "surface/metadata_array.cc",
    "surface/server.cc",
    "surface/validate_metadata.cc",
    "surface/version.cc",
    "transport/bdp_estimator.cc",
    "transport/byte_stream.cc",
    "transport/connectivity_state.cc",
    "transport/error_utils.cc",
    "transport/metadata.cc",
    "transport/metadata_batch.cc",
    "transport/pid_controller.cc",
    "transport/service_config.cc",
    "transport/static_metadata.cc",
    "transport/status_conversion.cc",
    "transport/timeout_encoding.cc",
    "transport/transport.cc",
    "transport/transport_op_string.cc",
    "debug/trace.cc",
    "ext/transport/chttp2/server/secure/server_secure_chttp2.cc",
    "ext/transport/chttp2/transport/bin_decoder.cc",
    "ext/transport/chttp2/transport/bin_encoder.cc",
    "ext/transport/chttp2/transport/chttp2_plugin.cc",
    "ext/transport/chttp2/transport/chttp2_transport.cc",
    "ext/transport/chttp2/transport/flow_control.cc",
    "ext/transport/chttp2/transport/frame_data.cc",
    "ext/transport/chttp2/transport/frame_goaway.cc",
    "ext/transport/chttp2/transport/frame_ping.cc",
    "ext/transport/chttp2/transport/frame_rst_stream.cc",
    "ext/transport/chttp2/transport/frame_settings.cc",
    "ext/transport/chttp2/transport/frame_window_update.cc",
    "ext/transport/chttp2/transport/hpack_encoder.cc",
    "ext/transport/chttp2/transport/hpack_parser.cc",
    "ext/transport/chttp2/transport/hpack_table.cc",
    "ext/transport/chttp2/transport/http2_settings.cc",
    "ext/transport/chttp2/transport/huffsyms.cc",
    "ext/transport/chttp2/transport/incoming_metadata.cc",
    "ext/transport/chttp2/transport/parsing.cc",
    "ext/transport/chttp2/transport/stream_lists.cc",
    "ext/transport/chttp2/transport/stream_map.cc",
    "ext/transport/chttp2/transport/varint.cc",
    "ext/transport/chttp2/transport/writing.cc",
    "ext/transport/chttp2/alpn/alpn.cc",
    "ext/filters/http/client/http_client_filter.cc",
    "ext/filters/http/http_filters_plugin.cc",
    "ext/filters/http/message_compress/message_compress_filter.cc",
    "ext/filters/http/server/http_server_filter.cc",
    "http/httpcli_security_connector.cc",
    "security/context/security_context.cc",
    "security/credentials/composite/composite_credentials.cc",
    "security/credentials/credentials.cc",
    "security/credentials/credentials_metadata.cc",
    "security/credentials/fake/fake_credentials.cc",
    "security/credentials/google_default/credentials_generic.cc",
    "security/credentials/google_default/google_default_credentials.cc",
    "security/credentials/iam/iam_credentials.cc",
    "security/credentials/jwt/json_token.cc",
    "security/credentials/jwt/jwt_credentials.cc",
    "security/credentials/jwt/jwt_verifier.cc",
    "security/credentials/oauth2/oauth2_credentials.cc",
    "security/credentials/plugin/plugin_credentials.cc",
    "security/credentials/ssl/ssl_credentials.cc",
    "security/transport/client_auth_filter.cc",
    "security/transport/lb_targets_info.cc",
    "security/transport/secure_endpoint.cc",
    "security/transport/security_connector.cc",
    "security/transport/security_handshaker.cc",
    "security/transport/server_auth_filter.cc",
    "security/transport/tsi_error.cc",
    "security/util/json_util.cc",
    "surface/init_secure.cc",
    "tsi/fake_transport_security.cc",
    "tsi/gts_transport_security.cc",
    "tsi/ssl_transport_security.cc",
    "tsi/transport_security_grpc.cc",
    "tsi/transport_security.cc",
    "tsi/transport_security_adapter.cc",
    "ext/transport/chttp2/server/chttp2_server.cc",
    "ext/transport/chttp2/client/secure/secure_channel_create.cc",
    "ext/filters/client_channel/backup_poller.cc",
    "ext/filters/client_channel/channel_connectivity.cc",
    "ext/filters/client_channel/client_channel.cc",
    "ext/filters/client_channel/client_channel_factory.cc",
    "ext/filters/client_channel/client_channel_plugin.cc",
    "ext/filters/client_channel/connector.cc",
    "ext/filters/client_channel/http_connect_handshaker.cc",
    "ext/filters/client_channel/http_proxy.cc",
    "ext/filters/client_channel/lb_policy.cc",
    "ext/filters/client_channel/lb_policy_factory.cc",
    "ext/filters/client_channel/lb_policy_registry.cc",
    "ext/filters/client_channel/parse_address.cc",
    "ext/filters/client_channel/proxy_mapper.cc",
    "ext/filters/client_channel/proxy_mapper_registry.cc",
    "ext/filters/client_channel/resolver.cc",
    "ext/filters/client_channel/resolver_factory.cc",
    "ext/filters/client_channel/resolver_registry.cc",
    "ext/filters/client_channel/retry_throttle.cc",
    "ext/filters/client_channel/subchannel.cc",
    "ext/filters/client_channel/subchannel_index.cc",
    "ext/filters/client_channel/uri_parser.cc",
    "ext/filters/deadline/deadline_filter.cc",
    "ext/transport/chttp2/client/chttp2_connector.cc",
    "ext/transport/chttp2/server/insecure/server_chttp2.cc",
    "ext/transport/chttp2/server/insecure/server_chttp2_posix.cc",
    "ext/transport/chttp2/client/insecure/channel_create.cc",
    "ext/transport/chttp2/client/insecure/channel_create_posix.cc",
    "ext/transport/inproc/inproc_plugin.cc",
    "ext/transport/inproc/inproc_transport.cc",
    "ext/filters/client_channel/lb_policy/grpclb/client_load_reporting_filter.cc",
    "ext/filters/client_channel/lb_policy/grpclb/grpclb.cc",
    "ext/filters/client_channel/lb_policy/grpclb/grpclb_channel_secure.cc",
    "ext/filters/client_channel/lb_policy/grpclb/grpclb_client_stats.cc",
    "ext/filters/client_channel/lb_policy/grpclb/load_balancer_api.cc",
    "ext/filters/client_channel/lb_policy/grpclb/proto/grpc/lb/v1/load_balancer.pb.c",
    "ext/filters/client_channel/resolver/fake/fake_resolver.cc",
    "ext/filters/client_channel/lb_policy/pick_first/pick_first.cc",
    "ext/filters/client_channel/lb_policy/subchannel_list.cc",
    "ext/filters/client_channel/lb_policy/round_robin/round_robin.cc",
    "ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver.h",
    "ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.h",
    "ext/filters/client_channel/resolver/dns/c_ares/dns_resolver_ares.cc",
    "ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc",
    "ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper.cc",
    "ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_wrapper_fallback.cc",
    "ext/filters/client_channel/resolver/dns/native/dns_resolver.cc",
    "ext/filters/client_channel/resolver/sockaddr/sockaddr_resolver.cc",
    "ext/filters/load_reporting/server_load_reporting_filter.cc",
    "ext/filters/load_reporting/server_load_reporting_plugin.cc",
    "ext/census/grpc_context.cc",
    "ext/filters/max_age/max_age_filter.cc",
    "ext/filters/message_size/message_size_filter.cc",
    "ext/filters/workarounds/workaround_cronet_compression_filter.cc",
    "ext/filters/workarounds/workaround_utils.cc",
    "plugin_registry/grpc_plugin_registry.cc",
    "impl/codegen/byte_buffer.h",
    "impl/codegen/byte_buffer_reader.h",
    "impl/codegen/compression_types.h",
    "impl/codegen/connectivity_state.h",
    "impl/codegen/exec_ctx_fwd.h",
    "impl/codegen/grpc_types.h",
    "impl/codegen/propagation_bits.h",
    "impl/codegen/slice.h",
    "impl/codegen/status.h",
    "impl/codegen/atm.h",
    "impl/codegen/atm_gcc_atomic.h",
    "impl/codegen/atm_gcc_sync.h",
    "impl/codegen/fork.h",
    "impl/codegen/gpr_slice.h",
    "impl/codegen/gpr_types.h",
    "impl/codegen/port_platform.h",
    "impl/codegen/sync.h",
    "impl/codegen/sync_custom.h",
    "impl/codegen/sync_generic.h",
    "impl/codegen/sync_posix.h",
    "grpc_security.h",
    "byte_buffer.h",
    "byte_buffer_reader.h",
    "compression.h",
    "fork.h",
    "grpc.h",
    "grpc_posix.h",
    "grpc_security_constants.h",
    "load_reporting.h",
    "slice.h",
    "slice_buffer.h",
    "status.h",
    "support/workaround_list.h",
    "census.h",
  ]

  deps = [
    ":gpr",
    ":ares",
    ":nanopb",
    "//lib/base",
    "//third_party/boringssl",
  ]

  public_deps = [
    "//third_party/zlib"
  ]

  cflags += [
    "-Wno-implicit-int-float-conversion"
  ]
    
  if (is_posix) {
    sources += [
      "iomgr/endpoint_pair_posix.cc",
      "iomgr/ev_poll_posix.cc",
      "iomgr/ev_posix.cc",
      "iomgr/fork_posix.cc",
      "iomgr/iomgr_posix.cc",
    ]  
  }
  if (current_os == "linux") {
    sources += [
      "iomgr/ev_epoll1_linux.cc",
      "iomgr/ev_epollex_linux.cc",
      "iomgr/ev_epollsig_linux.cc",
    ]
  }

  if (current_os == "win") {
    sources += [
      "impl/codegen/atm_windows.h",
      "impl/codegen/sync_windows.h",
      "iomgr/endpoint_pair_windows.cc",
      "iomgr/ev_windows.cc",
      "iomgr/fork_windows.cc",
      "iomgr/iocp_windows.cc",
      "iomgr/iomgr_windows.cc",
      "iomgr/pollset_set_windows.cc",
      "iomgr/pollset_windows.cc",
      "iomgr/resolve_address_windows.cc",
      "iomgr/socket_utils_windows.cc",
      "iomgr/socket_windows.cc",
      "iomgr/tcp_client_windows.cc",
      "iomgr/tcp_server_windows.cc",
      "iomgr/tcp_server_windows.h",
      "iomgr/tcp_windows.cc",
    ]
    #include_dirs = [  
    #]
    #deps += [
    #  "//third_party/zlib"
    #]
  }

}

component("rpc") {
  configs -= [ "//build/config/clang:find_bad_constructs" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [
    "//build/config/compiler:no_chromium_code",
   #"//third_party/abseil-cpp:absl_default_cflags_cc",
  ]

  #cflags_cc = []
 # configs = [ "//build/config/compiler:chromium_code" ]

  # cflags_cc -= [
  #   "-Xclang -mllvm",
  #   "-Xclang -fast-isel-sink-local-values=1",
  #   "-Xclang -load",
  #   "-Xclang ../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so",
  #   "-Xclang -add-plugin",
  #   "-Xclang find-bad-constructs",
  #   "-Xclang -plugin-arg-find-bad-constructs",
  #   "-Xclang enforce-in-thirdparty-webkit",
  #   "-Xclang -plugin-arg-find-bad-constructs",
  #   "-Xclang check-enum-max-value",
  #   "-Xclang -plugin-arg-find-bad-constructs",
  #   "-Xclang check-ipc",
  # ]
  
  default_compiler_configs -= [
    "//build/config/clang:find_bad_constructs",
    "//build/config/clang:extra_warnings",
  ]
  configs = []
  configs = default_compiler_configs
  
  include_dirs = [
    "//lib/rpc",
    "//lib/rpc/third_party/c-ares"
  ]
  
  sources = [
    "cpp/client/channel_cc.cc",
    "cpp/client/client_context.cc",
    "cpp/client/create_channel.cc",
    "cpp/client/create_channel_internal.cc",
    "cpp/client/create_channel_posix.cc",
    "cpp/client/credentials_cc.cc",
    "cpp/client/generic_stub.cc",
    "cpp/common/channel_arguments.cc",
    "cpp/common/channel_filter.cc",
    "cpp/common/completion_queue_cc.cc",
    "cpp/common/core_codegen.cc",
    "cpp/common/resource_quota_cc.cc",
    "cpp/common/rpc_method.cc",
    "cpp/common/version_cc.cc",
    "cpp/server/async_generic_service.cc",
    "cpp/server/channel_argument_option.cc",
    "cpp/server/create_default_thread_pool.cc",
    "cpp/server/dynamic_thread_pool.cc",
    "cpp/server/health/default_health_check_service.cc",
    "cpp/server/health/health.pb.c",
    "cpp/server/health/health_check_service.cc",
    "cpp/server/health/health_check_service_server_builder_option.cc",
    "cpp/server/server_builder.cc",
    "cpp/server/server_cc.cc",
    "cpp/server/server_context.cc",
    "cpp/server/server_credentials.cc",
    "cpp/server/server_posix.cc",
    "cpp/thread_manager/thread_manager.cc",
    "cpp/util/byte_buffer_cc.cc",
    "cpp/util/slice_cc.cc",
    "cpp/util/status.cc",
    "cpp/util/string_ref.cc",
    "cpp/util/time_cc.cc",
    "cpp/client/create_channel_internal.h",
    "cpp/common/channel_filter.h",
    "cpp/server/dynamic_thread_pool.h",
    "cpp/server/health/default_health_check_service.h",
    "cpp/server/health/health.pb.h",
    "cpp/server/thread_pool_interface.h",
    "cpp/thread_manager/thread_manager.h",
    "cpp/alarm.h",
    "cpp/channel.h",
    "cpp/client_context.h",
    "cpp/completion_queue.h",
    "cpp/create_channel.h",
    "cpp/create_channel_posix.h",
    "cpp/ext/health_check_service_server_builder_option.h",
    "cpp/generic/async_generic_service.h",
    "cpp/generic/generic_stub.h",
    "cpp/grpc++.h",
    "cpp/health_check_service_interface.h",
    "cpp/impl/call.h",
    "cpp/impl/channel_argument_option.h",
    "cpp/impl/client_unary_call.h",
    "cpp/impl/codegen/core_codegen.h",
    "cpp/impl/grpc_library.h",
    "cpp/impl/method_handler_impl.h",
    "cpp/impl/rpc_method.h",
    "cpp/impl/rpc_service_method.h",
    "cpp/impl/serialization_traits.h",
    "cpp/impl/server_builder_option.h",
    "cpp/impl/server_builder_plugin.h",
    "cpp/impl/server_initializer.h",
    "cpp/impl/service_type.h",
    "cpp/impl/sync_cxx11.h",
    "cpp/impl/sync_no_cxx11.h",
    "cpp/resource_quota.h",
    "cpp/security/auth_context.h",
    "cpp/security/auth_metadata_processor.h",
    "cpp/security/credentials.h",
    "cpp/security/server_credentials.h",
    "cpp/server.h",
    "cpp/server_builder.h",
    "cpp/server_context.h",
    "cpp/server_posix.h",
    "cpp/support/async_stream.h",
    "cpp/support/async_unary_call.h",
    "cpp/support/byte_buffer.h",
    "cpp/support/channel_arguments.h",
    "cpp/support/config.h",
    "cpp/support/slice.h",
    "cpp/support/status.h",
    "cpp/support/status_code_enum.h",
    "cpp/support/string_ref.h",
    "cpp/support/stub_options.h",
    "cpp/support/sync_stream.h",
    "cpp/support/time.h",
    "cpp/client/insecure_credentials.cc",
    "cpp/client/secure_credentials.cc",
    "cpp/codegen/codegen_init.cc",
    "cpp/common/auth_property_iterator.cc",
    "cpp/common/secure_auth_context.cc",
    "cpp/common/secure_channel_arguments.cc",
    "cpp/common/secure_create_auth_context.cc",
    "cpp/server/insecure_server_credentials.cc",
    "cpp/server/secure_server_credentials.cc",
  ]
  deps = [
    ":gpr",
    ":grpc",
    ":nanopb",
    ":ares"
  ]
  public_deps = [
    "//third_party/protobuf:protobuf_lite"
  ]
}

static_library("nanopb") {
  sources = [
    "third_party/nanopb/pb_common.c",
    "third_party/nanopb/pb_common.h",
    "third_party/nanopb/pb_decode.c",
    "third_party/nanopb/pb_decode.h",
    "third_party/nanopb/pb_encode.c",
    "third_party/nanopb/pb_encode.h",
    "third_party/nanopb/pb.h",
  ]
}

static_library("ares") {
  configs -= [ "//build/config/clang:find_bad_constructs" ]
  configs -= [ "//build/config/compiler:chromium_code" ]
  configs += [
    "//build/config/compiler:no_chromium_code",
  ]
  sources = [
    "third_party/c-ares/ares.h",
    "third_party/c-ares/ares_build.h",
    "third_party/c-ares/ares_config.h",
    "third_party/c-ares/ares_data.h",
    "third_party/c-ares/ares_dns.h",
    "third_party/c-ares/ares_getenv.h",
    "third_party/c-ares/ares_getopt.h",
    "third_party/c-ares/ares_inet_net_pton.h",
    "third_party/c-ares/ares_iphlpapi.h",
    "third_party/c-ares/ares_ipv6.h",
    "third_party/c-ares/ares_library_init.h",
    "third_party/c-ares/ares_llist.h",
    "third_party/c-ares/ares_nowarn.h",
    "third_party/c-ares/ares_platform.h",
    "third_party/c-ares/ares_private.h",
    "third_party/c-ares/ares_rules.h",
    "third_party/c-ares/ares_setup.h",
    "third_party/c-ares/ares_strcasecmp.h",
    "third_party/c-ares/ares_strdup.h",
    "third_party/c-ares/ares_version.h",
    "third_party/c-ares/bitncmp.h",
    "third_party/c-ares/config-win32.h",
    "third_party/c-ares/nameser.h",
    "third_party/c-ares/setup_once.h",
    "third_party/c-ares/ares__close_sockets.c",
    "third_party/c-ares/ares__get_hostent.c",
    "third_party/c-ares/ares__read_line.c",
    "third_party/c-ares/ares__timeval.c",
    "third_party/c-ares/ares_cancel.c",
    "third_party/c-ares/ares_create_query.c",
    "third_party/c-ares/ares_data.c",
    "third_party/c-ares/ares_destroy.c",
    "third_party/c-ares/ares_expand_name.c",
    "third_party/c-ares/ares_expand_string.c",
    "third_party/c-ares/ares_fds.c",
    "third_party/c-ares/ares_free_hostent.c",
    "third_party/c-ares/ares_free_string.c",
    "third_party/c-ares/ares_getenv.c",
    "third_party/c-ares/ares_gethostbyaddr.c",
    "third_party/c-ares/ares_gethostbyname.c",
    "third_party/c-ares/ares_getnameinfo.c",
    "third_party/c-ares/ares_getopt.c",
    "third_party/c-ares/ares_getsock.c",
    "third_party/c-ares/ares_init.c",
    "third_party/c-ares/ares_library_init.c",
    "third_party/c-ares/ares_llist.c",
    "third_party/c-ares/ares_mkquery.c",
    "third_party/c-ares/ares_nowarn.c",
    "third_party/c-ares/ares_options.c",
    "third_party/c-ares/ares_parse_a_reply.c",
    "third_party/c-ares/ares_parse_aaaa_reply.c",
    "third_party/c-ares/ares_parse_mx_reply.c",
    "third_party/c-ares/ares_parse_naptr_reply.c",
    "third_party/c-ares/ares_parse_ns_reply.c",
    "third_party/c-ares/ares_parse_ptr_reply.c",
    "third_party/c-ares/ares_parse_soa_reply.c",
    "third_party/c-ares/ares_parse_srv_reply.c",
    "third_party/c-ares/ares_parse_txt_reply.c",
    "third_party/c-ares/ares_platform.c",
    "third_party/c-ares/ares_process.c",
    "third_party/c-ares/ares_query.c",
    "third_party/c-ares/ares_search.c",
    "third_party/c-ares/ares_send.c",
    "third_party/c-ares/ares_strcasecmp.c",
    "third_party/c-ares/ares_strdup.c",
    "third_party/c-ares/ares_strerror.c",
    "third_party/c-ares/ares_timeout.c",
    "third_party/c-ares/ares_version.c",
    "third_party/c-ares/ares_writev.c",
    "third_party/c-ares/bitncmp.c",
    "third_party/c-ares/inet_net_pton.c",
    "third_party/c-ares/inet_ntop.c",
    "third_party/c-ares/windows_port.c",
  ]

  defines = [
    "_HAS_EXCEPTIONS=0",
    "NOMINMAX",
  ]

  include_dirs = [
    "//lib/rpc/third_party/c-ares",
  ]

  if (current_os == "linux") {
    defines += [
      "_GNU_SOURCE",
      "HAVE_CONFIG_H",
    ]
    include_dirs += [
      "//lib/rpc/third_party/c-ares/config_linux",
    ]
  }
  if (current_os == "win") {
    defines += [
      "_WIN32",
      "CARES_BUILDING_LIBRARY"
    ]
  }

}